#!/usr/bin/python2.7
# psoul: A stupid netsoul client

import signal, sys
import argparse
import socket
import md5

def sighandler(signum, frame):
  if args.verbose:
    print "\nBye bye"
  exit(1)

class NetsoulClient(object):

  def __init__(self, usr, passwd, position="<3", data="none",
               host="ns-server.epita.fr", port=4242):
    self.usr = usr
    self.passwd = passwd
    self.host = host
    self.port = port 
    self.position = position
    self.data = data
    try:
      self.socket = socket.socket()
      self.socket.connect((host, port))
    except socket.error, e:
      self.die(e)

  @property
  def close(self):
    self.socket.close

  def die(self, msg):
    sys.stderr.write("{}: error: {}\n".format(sys.argv[0], msg))
    self.close
    exit(1)

  def send_line(self, msg):
    self.socket.send("{}\n".format(msg))
    if args.verbose:
      sys.stdout.write(":send: {}\n".format(msg))

  def recv_line(self, size):
    msg = self.socket.recv(size)
    if args.verbose:
      sys.stdout.write(":recv: {}".format(msg))
    return msg

  def is_valid(self, s):
    if not "rep 002 -- cmd end" in s:
      self.die("wrong answer form")
    return s

  @property
  def authentify(self):
    info = self.recv_line(1024).split()
    self.send_line("auth_ag ext_user none none")
    self.is_valid(self.recv_line(1024))
    md5_tmp = "{}-{}/{}{}".format(info[2], info[3], info[4], self.passwd)
    md5_tmp = md5.new(md5_tmp).hexdigest()
    self.send_line("ext_user_log {} {} {} {}".
        format(self.usr, md5_tmp, self.data, self.position))
    self.is_valid(self.recv_line(1024))
    self.send_line("user_cmd state actif")

  @property
  def run(self):
    self.authentify
    while True:
      s = self.recv_line(1024).replace("\n", "")
      self.send_line(s) if "ping" in s else self.authentify

parser = argparse.ArgumentParser()
parser.add_argument("-q", "--quiet", action="store_true", help="run silently")
args = parser.parse_args()
args.verbose = False if args.quiet else True

signal.signal(signal.SIGINT, sighandler)
psoul = NetsoulClient("czegan_g", "passwd")
psoul.run
